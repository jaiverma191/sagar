package com.hiring.string;

public class ManachersAlgorithm {

	public static void main(String[] args) {

	}

	public static String findLongestPalingdrome(String s) {
		char[] s2 = addBoundaries(s.toCharArray());
		int[] p = new int[s2.length];
		int c = 0, r = 0;
		int m = 0, n = 0;
		for (int i = 0; i < s2.length; i++) {
			if (i > r) {
				p[i] = 0;
				m = i - 1;
				n = i + 1;
			} else {
				int i2 = c * 2 - i;
				if (p[i2] < r - i) {
					p[i] = p[i2];
					m = -1;
				}else
				{
					p[i]=r-i;
					n=r+1;
					m=i*2-n;
				}
			}
		}
		return null;
	}

	private static char[] addBoundaries(char[] cs) {
		if (cs == null || cs.length == 0) {
			return "".toCharArray();
		}
		char[] cs2 = new char[cs.length * 2 + 1];
		for (int i = 0; i < (cs2.length - 1); i = i + 2) {
			cs2[i] = '|';
			cs2[i + 1] = cs[i / 2];
		}
		cs2[cs2.length - 1] = '|';
		return cs2;
	}

	private static char[] removeBoundaries(char[] cs) {
		if (cs == null || cs.length < 3)
			return "".toCharArray();

		char[] cs2 = new char[(cs.length - 1) / 2];
		for (int i = 0; i < cs2.length; i++) {
			cs2[i] = cs[i * 2 + 1];
		}
		return cs2;
	}

}
