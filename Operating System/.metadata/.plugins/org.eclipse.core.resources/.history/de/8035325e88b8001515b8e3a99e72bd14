package com.hiring.tree;

public class Question12 {

	public static void main(String[] args) {
		TreeNode root = createTree();
		BTreePrinter.printNode(root);
		TreeNode ancestor = lca(root, root.right.right, root.left.left.right);
		if (ancestor != null)
			System.err.println(ancestor.value);
	}

	private static TreeNode lca(TreeNode root, TreeNode a, TreeNode b) {
		if (root == null)
			return root;
		if (root == a || root == b)
			return root;
		TreeNode left = lca(root.left, a, b);
		TreeNode right = lca(root.right, a, b);
		if (right != null && left != null)
			return root;
		return left != null ? left : right;

	}

	private static TreeNode createTree() {
		TreeNode root = new TreeNode(1);
		root.left = new TreeNode(2);
		root.left.left = new TreeNode(4);
		root.left.left.left = new TreeNode(7);
		root.left.left.right = new TreeNode(8);
		root.left.right = new TreeNode(5);
		root.right = new TreeNode(3);
		root.right.right = new TreeNode(6);
		root.right.right.left = new TreeNode(9);
		root.right.right.right = new TreeNode(10);
		return root;
	}
}
