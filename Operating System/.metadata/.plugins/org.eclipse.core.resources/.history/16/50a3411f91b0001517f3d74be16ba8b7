package com.hiring.string;

public class Test {

	static Node tail;
	static Node head;

	public static void main(String[] args) {
		add(1);
		add(2);
		add(3);
		remove(head, 1);
	}

	static void add(int value) {
		Node node = new Node(value);
		if (head == null) {
			head = node;
			tail = node;
			return;
		}
		tail.next = node;
		node.prev = tail;
		tail = node;

	}

	static void remove(Node head, int value) {
		if (head == null) {
			System.out.println("Not Found");
		} else if (value == head.d) {
			if (head == tail) {
				head = null;
				tail = null;
			} else {
				head = head.next;
				head.prev = null;
			}
		} else {
			Node n = head.next;
			while (n != null && value != n.d) {
				n = n.next;
			}
			if (n == tail) {
				tail = tail.prev;
				tail.next = null;
			} else if (n != null) {
				n.prev.next = n.next;
				n.next.prev = n.prev;
			}
		}
	}
}
