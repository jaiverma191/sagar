package com.hiring.producer.consumer;

import java.util.Queue;
import java.util.Vector;

public class ProducerConsumerDemo {

	public static void main(String[] args) {
		Vector sQueue= new Vector();
		int size=4;
		Thread producerThread = new Thread();
		Thread consumerThread = new Thread();
		producerThread.start();
		consumerThread.start();
		
	}
}

class ProducerThread implements Runnable
{
	private final Vector sQueue;
	private final int size;
	
	public ProducerThread(Vector queue,int size) {
		this.size=size;
		this.sQueue=queue;
	}
	
	@Override
	public void run() {
for (int i = 0; i < 12; i++) {
	
}		
	}
	
}

class ConsumerThread implements Runnable
{
	private final Vector sQueue;
	private final int size;
	
	public ConsumerThread(Vector queue,int size) {
		this.size=size;
		this.sQueue=queue;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
}